// <auto-generated />
using System;
using AV.Engine.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AV.Engine.Persistence.Database.Migrations
{
    [DbContext(typeof(AvDbContext))]
    partial class AvDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AV.Core.Models.ThreatInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ScanEventId")
                        .HasColumnType("integer");

                    b.Property<string>("ThreatName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ScanEventId");

                    b.ToTable("ThreatInfos");
                });

            modelBuilder.Entity("AV.Engine.Core.Entities.ScanEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Reason")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ScanEvents");
                });

            modelBuilder.Entity("AV.Core.Models.ThreatInfo", b =>
                {
                    b.HasOne("AV.Engine.Core.Entities.ScanEvent", "ScanEvent")
                        .WithMany("Threats")
                        .HasForeignKey("ScanEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScanEvent");
                });

            modelBuilder.Entity("AV.Engine.Core.Entities.ScanEvent", b =>
                {
                    b.Navigation("Threats");
                });
#pragma warning restore 612, 618
        }
    }
}
